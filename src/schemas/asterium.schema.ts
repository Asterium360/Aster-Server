import { z } from "zod";

// Para crear un descubrimiento
export const createDiscoverySchema = z.object({
  title: z
    .string()
    .min(3, "El t√≠tulo debe tener al menos 3 caracteres")
    .max(200, "El t√≠tulo no puede tener m√°s de 200 caracteres"),
  excerpt: z.string().optional(), // porque en el model es TEXT nullable
  content_md: z
    .string()
    .min(10, "El contenido debe tener al menos 10 caracteres"),
  status: z.enum(["draft", "published", "archived"]).default("draft"),
  //campo de nuestra imagen
  image_url:z
  .string()
  .url("Debe ser una URL v√°lida")
  .optional()
  .or(z.literal(""))
  .or(z.undefined()),
});

// Para actualizar un descubrimiento ‚Üí todo opcional
export const updateDiscoverySchema = z.object({
  title: z.string().min(3).max(200).optional(),
  excerpt: z.string().optional(),
  content_md: z.string().min(10).optional(),
  status: z.enum(["draft", "published", "archived"]).optional(),

  // üñºÔ∏è Nuevo campo: URL de imagen (opcional)
  image_url: z
  .string()
  .refine(
    (val) =>
      !val ||
      val === "" ||
      /^https?:\/\/.+\.(jpg|jpeg|png|webp)(\?.*)?$/i.test(val), // ‚úÖ permite query params
    "Debe ser una URL v√°lida si se proporciona"
  )
  .optional()
  .or(z.literal(""))
  .or(z.undefined()),
});
// Validaci√≥n de params
export const idParamSchema = z.object({
  id: z.coerce.number().int().positive("El id debe ser un n√∫mero positivo"),
});
